framework:
    messenger:
        transports:
            async_priority_high: "%env(MESSENGER_TRANSPORT_DSN)%?queue_name=high_priority"
            async_normal:
                dsn: "%env(MESSENGER_TRANSPORT_DSN)%"
                options:
                    queue_name: normal_priority
                      # предварительные параметры шины и RabbitMQ
                      #asyn_low:
                      #    async:
                      #+ dsn: '%env(RABBITMQ_DSN)%'
                    #+ retry_strategy:
                    #+ max_retries: 3
                    #+ multiplier: 2
                #failed: 'doctrine://default?queue_name=failed'
                #failure_transport: failed
            #routing:
            #App\Message\ReviewMessage: async
        buses:
            command_bus:
                middleware:
                    # wraps all handlers in a single Doctrine transaction
                    # handlers do not need to call flush() and an error
                    # in any handler will cause a rollback
                    - doctrine_transaction

                    # each time a message is handled, the Doctrine connection
                    # is "pinged" and reconnected if it's closed. Useful
                    # if your workers run for a long time and the database
                    # connection is sometimes lost
                    - doctrine_ping_connection

                    # After handling, the Doctrine connection is closed,
                    # which can free up database connections in a worker,
                    # instead of keeping them open forever
                    - doctrine_close_connection

                    # or pass a different entity manager to any
                    #- doctrine_transaction: ['custom']
