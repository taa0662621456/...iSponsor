<?php
declare(strict_types=1);

namespace App\Repository;

use App\Entity\Product\ProductsFavourites;
use App\Entity\Vendor\VendorsFavourites;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NonUniqueResultException;

/**
 * ProductsFavouritesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductsFavouritesRepository extends EntityRepository
{
    /**
	 * @param VendorsFavourites $vendor
	 * @param integer           $productId
	 *
     * @return bool
     * @throws NonUniqueResultException
     */
    public function checkIsLiked($vendor, $productId): ?bool
    {
        $qb = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('count(f.id)')
			->from(ProductsFavourites::class, 'f')
            ->innerJoin('f.vendor', 'v')
            ->innerJoin('f.product', 'p')
            ->where('v = :vendor')
            ->andWhere('p.id = :product_id')
            ->setParameters([
                'product_id' => $productId,
                'vendor' => $vendor
            ]);

        if ($qb->getQuery()->getSingleScalarResult()) {
            return true;
        }

        return false;
    }
}
