<?php
declare(strict_types=1);

namespace App\Repository\Project;

use App\Entity\Project\ProjectsFavourites;
use App\Entity\Vendor\VendorsFavourites;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NonUniqueResultException;

/**
 * ProjectsFavouritesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProjectsFavouritesRepository extends EntityRepository
{
	/**
	 * @param VendorsFavourites $vendor
	 * @param integer           $projectId
	 *
	 * @return bool
	 * @throws NonUniqueResultException
	 */
	public function checkIsLiked($vendor, $projectId): ?bool
	{
		$qb = $this->getEntityManager()
			->createQueryBuilder()
			->select('count(f.id)')
			->from(ProjectsFavourites::class, 'f')
			->innerJoin('f.createBy', 'v')
			->innerJoin('f.project', 'p')
			->where('v = :createBy')
			->andWhere('p.id = :project_id')
			->setParameters([
				'project_id' => $projectId,
				'vendor' => $vendor
			]);

		if ($qb->getQuery()->getSingleScalarResult()) {
			return true;
		}

		return false;
	}
}
